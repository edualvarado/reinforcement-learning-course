import unittest
import numpy as np
import sys
from blackjack import BlackjackEnv
from cliff_walking import CliffWalkingEnv
from q_learning import q_learning
from off_policy_mc import create_random_policy, mc_control_importance_sampling

class TestMCControl(unittest.TestCase):
  def test_q_values(self):
    np.random.seed(0)
    env = BlackjackEnv(test=True)
    expected_q_values = {(14, 10, False): [-0.55667244, -0.55666552],
                         (20, 10, False): [ 0.85307258,  0.        ],
                         (19, 10, False): [-0.03771662, -0.03913207],
                         (15, 3, True): [-0.08365019, -0.06177606],
                         (17, 3, True): [-0.09180328, -0.02758621],
                         (18, 7, False): [ 0.80474543,  0.        ],
                         (21, 9, True): [ 1.87136564,  0.        ],
                         (15, 10, False): [-0.57202554, -0.57083906],
                         (13, 5, False): [-0.19646018, -0.19606004],
                         (17, 7, False): [-0.21999044, -0.22351798],
                         (21, 4, True): [ 1.74716981,  0.        ],
                         (21, 4, False): [ 1.75901639,  0.        ],
                         (20, 6, False): [ 1.39322034,  0.        ],
                         (16, 5, False): [-0.22599418, -0.22754491],
                         (20, 2, False): [ 1.30929919,  0.        ],
                         (17, 10, False): [-0.53484487, -0.53445418],
                         (18, 10, False): [-0.36599388, -0.36597938],
                         (18, 10, True): [-0.17896389, -0.17784711],
                         (13, 10, False): [-0.50639033, -0.50642118],
                         (12, 3, False): [-0.27648931, -0.27795976],
                         (21, 3, False): [ 1.77389985,  0.        ],
                         (20, 1, False): [ 0.27903732,  0.        ],
                         (19, 6, False): [ 0.93563102, -0.00103093],
                         (20, 3, False): [ 1.35117278,  0.        ],
                         (16, 6, False): [-0.27862595, -0.27877121],
                         (16, 8, False): [-0.49311164, -0.49056604],
                         (15, 6, False): [-0.18892508, -0.19052002],
                         (13, 4, False): [-0.22846782, -0.2326228 ],
                         (16, 4, False): [-0.27368421, -0.27437859],
                         (15, 2, False): [-0.37379753, -0.37822878],
                         (12, 10, False): [-0.49994324, -0.49988649],
                         (13, 9, True): [-0.30493274, -0.2962963 ],
                         (13, 9, False): [-0.43541762, -0.43526171],
                         (14, 9, False): [-0.49571106, -0.49582947],
                         (16, 9, False): [-0.5288868 , -0.52892562],
                         (18, 5, False): [ 0.39844886, -0.00187705],
                         (19, 3, False): [ 0.79941719,  0.        ],
                         (20, 7, True): [ 1.56769596,  0.        ],
                         (20, 4, True): [ 1.31073446,  0.        ],
                         (16, 3, False): [-0.31508805, -0.31433998],
                         (15, 4, True): [-0.19305019, -0.05042017],
                         (20, 7, False): [  1.57104011e+00,  -1.36147039e-03],
                         (17, 6, False): [ 0.02804642, -0.01353311],
                         (12, 2, True): [-0.14      ,  0.10714286],
                         (12, 8, False): [-0.3288807 , -0.32779317],
                         (16, 10, False): [-0.57658694, -0.57661009],
                         (13, 5, True): [-0.05882353,  0.36078431],
                         (16, 2, False): [-0.36167076, -0.36104513],
                         (13, 2, True): [-0.04918033,  0.27705628],
                         (13, 2, False): [-0.30961183, -0.31088561],
                         (17, 8, False): [-0.43448276, -0.43632869],
                         (20, 4, False): [ 1.32866667,  0.        ],
                         (21, 8, True): [ 1.89107981,  0.        ],
                         (14, 6, True): [-0.25104603, -0.26771654],
                         (14, 1, False): [-0.68097015, -0.68043088],
                         (18, 8, False): [ 0.2268431,  0.       ],
                         (19, 4, False): [ 0.83059548, -0.00294985],
                         (14, 2, False): [-0.30662983, -0.30350554],
                         (18, 4, False): [ 0.35192308, -0.00196175],
                         (21, 10, False): [ 1.787005,  0.      ],
                         (12, 9, False): [-0.42573821, -0.42732049],
                         (17, 9, False): [-0.48977695, -0.48971784],
                         (18, 9, False): [-0.29426189, -0.2952381 ],
                         (20, 5, False): [ 1.36117768,  0.        ],
                         (19, 10, True): [-0.02996255, -0.05882353],
                         (20, 10, True): [ 0.89829352,  0.        ],
                         (15, 8, False): [-0.4364667 , -0.43577982],
                         (16, 3, True): [-0.19157088, -0.17161716],
                         (16, 2, True): [-0.22900763, -0.24334601],
                         (20, 9, False): [ 1.52642706,  0.        ],
                         (15, 4, False): [-0.31670481, -0.31813953],
                         (18, 6, False): [ 0.59704433,  0.        ],
                         (16, 9, True): [-0.16494845, -0.14915254],
                         (18, 2, False): [ 0.26942482, -0.00291971],
                         (19, 2, True): [ 0.84726225,  0.        ],
                         (21, 7, False): [ 1.85587045,  0.        ],
                         (12, 6, False): [-0.21556886, -0.21290323],
                         (13, 6, False): [-0.17260274, -0.17280453],
                         (12, 4, True): [-0.01550388,  0.16666667],
                         (21, 1, False): [ 1.30333592,  0.        ],
                         (14, 8, False): [-0.39443155, -0.3945157 ],
                         (20, 8, False): [ 1.57485637,  0.        ],
                         (14, 5, False): [-0.22222222, -0.2221231 ],
                         (15, 5, False): [-0.19739292, -0.20194535],
                         (21, 9, False): [ 1.89735365,  0.        ],
                         (16, 1, True): [-0.65562914, -0.66420664],
                         (17, 5, False): [-0.07304181, -0.07662464],
                         (21, 5, False): [ 1.77480315,  0.        ],
                         (13, 7, False): [-0.41295547, -0.41235241],
                         (16, 10, True): [-0.36783734, -0.36730946],
                         (18, 3, False): [ 0.27807487, -0.00099108],
                         (16, 8, True): [-0.02013423,  0.07604563],
                         (16, 1, False): [-0.72951208, -0.72945522],
                         (19, 2, False): [ 0.79284963, -0.00289995],
                         (14, 10, True): [-0.40317776, -0.38410596],
                         (12, 2, False): [-0.30944774, -0.30908269],
                         (13, 3, False): [-0.31129477, -0.31302801],
                         (14, 4, False): [-0.23059256, -0.23224044],
                         (19, 8, False): [ 1.25283391, -0.00195027],
                         (18, 1, True): [-0.51465798, -0.50666667],
                         (16, 4, True): [-0.00746269,  0.1294964 ],
                         (18, 1, False): [-0.48914616, -0.48893167],
                         (21, 5, True): [ 1.76222435,  0.        ],
                         (19, 9, False): [ 0.61055777,  0.        ],
                         (21, 10, True): [ 1.78874539,  0.        ],
                         (17, 1, False): [-0.67257509, -0.67368421],
                         (15, 9, False): [-0.48830683, -0.4886313 ],
                         (13, 7, True): [-0.08695652,  0.09022556],
                         (20, 5, True): [ 1.44038929,  0.        ],
                         (12, 7, True): [-0.3442623 , -0.31007752],
                         (12, 7, False): [-0.3150022 , -0.31488203],
                         (15, 3, False): [-0.33017975, -0.33074463],
                         (14, 5, True): [-0.07659574,  0.09302326],
                         (13, 1, False): [-0.6660542 , -0.66544622],
                         (12, 1, False): [-0.67491166, -0.66696468],
                         (15, 7, False): [-0.40413112, -0.40112729],
                         (21, 2, True): [ 1.76015109,  0.        ],
                         (15, 1, False): [-0.7369403 , -0.73708069],
                         (21, 3, True): [ 1.81576448,  0.        ],
                         (16, 6, True): [-0.07352941,  0.25559105],
                         (14, 7, True): [-0.24590164, -0.07017544],
                         (16, 7, False): [-0.43923445, -0.43661972],
                         (13, 8, False): [-0.39911894, -0.39716312],
                         (14, 3, False): [-0.2665424 , -0.26531552],
                         (17, 3, False): [-0.14574518, -0.14522059],
                         (17, 2, False): [-0.26778243, -0.27407762],
                         (18, 9, True): [-0.19016393, -0.22960725],
                         (21, 8, False): [ 1.86946011,  0.        ],
                         (12, 4, False): [-0.23551229, -0.23282783],
                         (17, 4, False): [-0.14487117, -0.14627011],
                         (17, 6, True): [-0.03870968,  0.16828479],
                         (21, 2, False): [ 1.79160187,  0.        ],
                         (14, 1, True): [-0.5785124 , -0.58039216],
                         (19, 7, False): [ 1.20190275,  0.        ],
                         (19, 1, False): [-0.19358074, -0.1960396 ],
                         (19, 5, False): [ 0.8641115,  0.       ],
                         (14, 7, False): [-0.43006834, -0.43024894],
                         (19, 9, True): [ 0.48,  0.  ],
                         (21, 7, True): [ 1.8575152,  0.       ],
                         (17, 10, True): [-0.35404255, -0.34064081],
                         (17, 8, True): [-0.02749141,  0.23255814],
                         (14, 6, False): [-0.17974453, -0.18083671],
                         (21, 6, True): [ 1.83101045,  0.        ],
                         (15, 10, True): [-0.35166994, -0.35151515],
                         (14, 8, True): [-0.2578125 , -0.03305785],
                         (21, 1, True): [ 1.24786325,  0.        ],
                         (19, 1, True): [-0.14044944, -0.15384615],
                         (12, 9, True): [-0.24299065, -0.24778761],
                         (17, 9, True): [-0.26058632, -0.26751592],
                         (16, 5, True): [-0.07560137, -0.10332103],
                         (12, 5, False): [-0.2344519 , -0.22790489],
                         (17, 7, True): [-0.02076125,  0.10996564],
                         (19, 7, True): [ 1.31855956,  0.        ],
                         (14, 2, True): [-0.06837607,  0.08510638],
                         (15, 2, True): [-0.0661157 ,  0.01459854],
                         (20, 1, True): [ 0.32608696, -0.01041667],
                         (18, 5, True): [ 0.38235294, -0.01246106],
                         (19, 5, True): [ 0.83888889,  0.        ],
                         (14, 9, True): [-0.06896552,  0.14096916],
                         (13, 6, True): [-0.10569106,  0.22110553],
                         (21, 6, False): [ 1.78449612,  0.        ],
                         (17, 4, True): [ 0.02572347, -0.09427609],
                         (15, 7, True): [-0.048     ,  0.09677419],
                         (15, 1, True): [-0.66666667, -0.625     ],
                         (17, 1, True): [-0.5483871 , -0.53061224],
                         (15, 5, True): [-0.11673152, -0.09266409],
                         (18, 6, True): [-0.00645161,  0.15584416],
                         (18, 8, True): [ 0.30083565,  0.        ],
                         (20, 8, True): [ 1.62871287,  0.        ],
                         (13, 10, True): [-0.47659574, -0.48      ],
                         (20, 6, True): [ 1.49431818,  0.        ],
                         (15, 6, True): [-0.14516129, -0.10355987],
                         (20, 2, True): [-0.00544959,  0.53107345],
                         (20, 9, True): [-0.00527704,  0.10989011],
                         (13, 8, True): [-0.02564103,  0.37383178],
                         (13, 4, True): [-0.09338521,  0.18333333],
                         (13, 1, True): [-0.51428571, -0.46280992],
                         (12, 3, True): [-0.01680672,  0.15873016],
                         (13, 3, True): [-0.22900763, -0.23423423],
                         (17, 5, True): [-0.04137931,  0.27272727],
                         (15, 9, True): [-0.3153527, -0.3153527],
                         (18, 2, True): [ 0.24342105, -0.01384083],
                         (14, 3, True): [-0.00873362,  0.13278008],
                         (12, 6, True): [-0.08928571,  0.17391304],
                         (18, 4, True): [ 0.28382838,  0.        ],
                         (16, 7, True): [-0.10691824,  0.12456747],
                         (15, 8, True): [-0.19920319, -0.08658009],
                         (12, 8, True): [-0.14141414,  0.03539823],
                         (14, 4, True): [-0.07582938,  0.03524229],
                         (19, 4, True): [ 0.86980609,  0.        ],
                         (19, 3, True): [ 0.81632653, -0.0247678 ],
                         (19, 6, True): [ 0.95468278, -0.01223242],
                         (18, 7, True): [ 1.03135889, -0.0125    ],
                         (17, 2, True): [-0.16891892, -0.1384083 ],
                         (20, 3, True): [ 1.36778116,  0.        ],
                         (18, 3, True): [ 0.26911315,  0.        ],
                         (19, 8, True): [ 1.23646724,  0.        ],
                         (12, 5, True): [-0.01652893,  0.31858407],
                         (12, 1, True): [-0.32653061, -0.30252101],
                         (12, 10, True): [-0.47413793, -0.41322314]}

    random_policy = create_random_policy(env.action_space.n)
    Q, _ = mc_control_importance_sampling(env, num_episodes=500000, behavior_policy=random_policy)
    self.assert_float_dict_almost_equal(expected_q_values, Q, decimal=2)
  
  def assert_float_dict_almost_equal(self, a, b, decimal=6):
    for key_pair in zip(sorted(a), sorted(b)):
      self.assertTupleEqual(key_pair[0], key_pair[1])
      np.testing.assert_array_almost_equal(a[key_pair[0]], b[key_pair[1]], decimal=decimal)

class TestQLearning(unittest.TestCase):
  @classmethod
  def setUpClass(cls):
    np.random.seed(0)
    env = CliffWalkingEnv()
    cls.Q, cls.stats = q_learning(env, 500)

  def test_q_values(self):  
    expected_q_values = {36: [-13.        , -99.99847412, -13.99793134, -13.99989125],
                         24: [-13.49710026, -12.        , -13.99820799, -12.99943967],
                         12: [-12.82379343, -12.78845206, -12.6809052 , -12.68432215],
                         0: [-12.25      , -12.35247495, -12.39078253, -12.24448329],
                         1: [-11.71176481, -11.74629913, -11.93450181, -11.8367309 ],
                         2: [-11.17147528, -10.92768896, -10.98834139, -11.82520464],
                         14: [-11.11142202, -10.96755917, -10.97793159, -11.41046726],
                         3: [-10.25      , -10.08161693, -10.12084676, -11.12942917],
                         4: [-9.32727051, -9.2432254 , -9.74520199, -9.26034445],
                         5: [-8.5       , -8.35266845, -8.70257811, -8.77540643],
                         6: [-7.5       , -7.50886764, -7.60559975, -7.5479126 ],
                         7: [-6.77734375, -6.64107635, -6.78943835, -6.79408813],
                         8: [-6.30754702, -5.78547857, -5.74104174, -6.24649891],
                         19: [-6.3800348 , -5.99989625, -5.99990623, -6.63451042],
                         18: [-7.21072567, -6.99974138, -6.99986636, -8.55963877],
                         17: [-8.96059073, -7.9994099 , -7.99944799, -9.67197862],
                         16: [-9.62802058, -8.99848076, -8.9990922 , -9.75750722],
                         15: [-10.16274317,  -9.99715028,  -9.99795646, -10.80202542],
                         13: [-12.42137411, -11.9335771 , -11.95402925, -12.81399528],
                         20: [-5.96095161, -4.99996096, -4.99998729, -6.23703834],
                         9: [-5.        , -4.92796804, -4.90053431, -5.54233545],
                         10: [-4.25      , -3.96801244, -3.98320146, -4.98549087],
                         11: [-3.44148111, -3.        , -2.99619046, -3.76515198],
                         23: [-3.06648111, -2.87414416, -2.        , -2.3046875 ],
                         22: [-4.47421227, -2.99999853, -2.9999976 , -3.03710938],
                         21: [-5.41569181, -3.9999867 , -3.99998555, -5.71363213],
                         32: [ -5.99980367,  -4.        , -99.21875   ,  -5.99784381],
                         31: [ -6.99183671,  -5.        , -99.8046875 ,  -6.99960543],
                         33: [ -4.98881985,  -3.        , -99.8046875 ,  -4.97478665],
                         35: [-2.9981689 , -1.99804688, -1.        , -2.99197388],
                         34: [ -3.98397119,  -2.        , -99.8046875 ,  -3.98498535],
                         47: [ 0.,  0.,  0.,  0.],
                         37: [ 0.,  0.,  0.,  0.],
                         25: [-12.90564936, -11.        , -99.99389648, -12.97025546],
                         26: [-11.86995709, -10.        , -99.99694824, -11.94398283],
                         38: [ 0.,  0.,  0.,  0.],
                         28: [ -9.89046974,  -8.        , -99.99990463,  -9.99936445],
                         27: [-10.99496568,  -9.        , -99.99847412, -10.99690954],
                         29: [ -8.98680985,  -7.        , -99.609375  ,  -8.96609374],
                         30: [ -7.99175931,  -6.        , -99.97558594,  -7.96041614],
                         43: [ 0.,  0.,  0.,  0.],
                         40: [ 0.,  0.,  0.,  0.],
                         39: [ 0.,  0.,  0.,  0.],
                         41: [ 0.,  0.,  0.,  0.],
                         42: [ 0.,  0.,  0.,  0.],
                         45: [ 0.,  0.,  0.,  0.],
                         44: [ 0.,  0.,  0.,  0.],
                         46: [ 0.,  0.,  0.,  0.]}

    self.assert_float_dict_almost_equal(self.Q, expected_q_values, decimal=2)

  def test_rewards(self):
    expected_reward = [-112.0,
                       -100.0,
                       -109.0,
                       -109.0,
                       -164.0,
                       -113.0,
                       -122.0,
                       -123.0,
                       -114.0,
                       -74.0,
                       -111.0,
                       -135.0,
                       -112.0,
                       -148.0,
                       -130.0,
                       -134.0,
                       -180.0,
                       -159.0,
                       -123.0,
                       -66.0,
                       -75.0,
                       -106.0,
                       -41.0,
                       -103.0,
                       -127.0,
                       -114.0,
                       -61.0,
                       -23.0,
                       -74.0,
                       -68.0,
                       -38.0,
                       -40.0,
                       -102.0,
                       -24.0,
                       -129.0,
                       -62.0,
                       -54.0,
                       -26.0,
                       -119.0,
                       -29.0,
                       -34.0,
                       -20.0,
                       -61.0,
                       -23.0,
                       -128.0,
                       -52.0,
                       -17.0,
                       -40.0,
                       -110.0,
                       -19.0,
                       -36.0,
                       -32.0,
                       -38.0,
                       -17.0,
                       -21.0,
                       -33.0,
                       -120.0,
                       -113.0,
                       -119.0,
                       -111.0,
                       -32.0,
                       -34.0,
                       -29.0,
                       -19.0,
                       -25.0,
                       -17.0,
                       -25.0,
                       -15.0,
                       -16.0,
                       -126.0,
                       -25.0,
                       -19.0,
                       -16.0,
                       -17.0,
                       -102.0,
                       -21.0,
                       -15.0,
                       -29.0,
                       -19.0,
                       -13.0,
                       -20.0,
                       -112.0,
                       -102.0,
                       -104.0,
                       -29.0,
                       -100.0,
                       -13.0,
                       -13.0,
                       -17.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -25.0,
                       -109.0,
                       -17.0,
                       -105.0,
                       -13.0,
                       -13.0,
                       -108.0,
                       -100.0,
                       -104.0,
                       -111.0,
                       -15.0,
                       -101.0,
                       -123.0,
                       -104.0,
                       -13.0,
                       -13.0,
                       -102.0,
                       -15.0,
                       -100.0,
                       -13.0,
                       -108.0,
                       -102.0,
                       -103.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -14.0,
                       -13.0,
                       -17.0,
                       -14.0,
                       -13.0,
                       -103.0,
                       -13.0,
                       -107.0,
                       -13.0,
                       -13.0,
                       -110.0,
                       -15.0,
                       -13.0,
                       -100.0,
                       -110.0,
                       -21.0,
                       -104.0,
                       -106.0,
                       -15.0,
                       -18.0,
                       -109.0,
                       -18.0,
                       -109.0,
                       -104.0,
                       -16.0,
                       -105.0,
                       -13.0,
                       -13.0,
                       -17.0,
                       -21.0,
                       -13.0,
                       -17.0,
                       -13.0,
                       -21.0,
                       -106.0,
                       -17.0,
                       -13.0,
                       -18.0,
                       -13.0,
                       -105.0,
                       -14.0,
                       -113.0,
                       -103.0,
                       -13.0,
                       -15.0,
                       -13.0,
                       -15.0,
                       -13.0,
                       -22.0,
                       -14.0,
                       -13.0,
                       -13.0,
                       -17.0,
                       -109.0,
                       -15.0,
                       -111.0,
                       -13.0,
                       -16.0,
                       -13.0,
                       -100.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -15.0,
                       -15.0,
                       -13.0,
                       -107.0,
                       -103.0,
                       -13.0,
                       -13.0,
                       -15.0,
                       -15.0,
                       -17.0,
                       -110.0,
                       -13.0,
                       -17.0,
                       -13.0,
                       -13.0,
                       -108.0,
                       -13.0,
                       -15.0,
                       -13.0,
                       -110.0,
                       -13.0,
                       -13.0,
                       -108.0,
                       -111.0,
                       -13.0,
                       -103.0,
                       -13.0,
                       -100.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -104.0,
                       -19.0,
                       -13.0,
                       -13.0,
                       -102.0,
                       -13.0,
                       -15.0,
                       -15.0,
                       -18.0,
                       -13.0,
                       -13.0,
                       -113.0,
                       -107.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -15.0,
                       -13.0,
                       -13.0,
                       -15.0,
                       -105.0,
                       -13.0,
                       -13.0,
                       -111.0,
                       -15.0,
                       -13.0,
                       -105.0,
                       -15.0,
                       -105.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -105.0,
                       -14.0,
                       -13.0,
                       -14.0,
                       -15.0,
                       -19.0,
                       -105.0,
                       -102.0,
                       -13.0,
                       -15.0,
                       -15.0,
                       -108.0,
                       -13.0,
                       -15.0,
                       -16.0,
                       -13.0,
                       -103.0,
                       -110.0,
                       -13.0,
                       -25.0,
                       -18.0,
                       -13.0,
                       -15.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -21.0,
                       -15.0,
                       -13.0,
                       -15.0,
                       -102.0,
                       -17.0,
                       -15.0,
                       -111.0,
                       -15.0,
                       -15.0,
                       -15.0,
                       -14.0,
                       -113.0,
                       -104.0,
                       -103.0,
                       -106.0,
                       -14.0,
                       -13.0,
                       -107.0,
                       -109.0,
                       -13.0,
                       -15.0,
                       -13.0,
                       -13.0,
                       -17.0,
                       -19.0,
                       -100.0,
                       -111.0,
                       -15.0,
                       -13.0,
                       -13.0,
                       -15.0,
                       -13.0,
                       -13.0,
                       -16.0,
                       -14.0,
                       -14.0,
                       -13.0,
                       -107.0,
                       -104.0,
                       -15.0,
                       -13.0,
                       -107.0,
                       -17.0,
                       -13.0,
                       -103.0,
                       -100.0,
                       -13.0,
                       -15.0,
                       -13.0,
                       -100.0,
                       -13.0,
                       -19.0,
                       -15.0,
                       -16.0,
                       -17.0,
                       -107.0,
                       -13.0,
                       -15.0,
                       -13.0,
                       -13.0,
                       -15.0,
                       -13.0,
                       -15.0,
                       -16.0,
                       -13.0,
                       -106.0,
                       -17.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -104.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -103.0,
                       -15.0,
                       -13.0,
                       -13.0,
                       -23.0,
                       -17.0,
                       -103.0,
                       -105.0,
                       -14.0,
                       -13.0,
                       -13.0,
                       -15.0,
                       -13.0,
                       -13.0,
                       -17.0,
                       -17.0,
                       -17.0,
                       -15.0,
                       -13.0,
                       -109.0,
                       -106.0,
                       -13.0,
                       -13.0,
                       -15.0,
                       -13.0,
                       -107.0,
                       -13.0,
                       -13.0,
                       -15.0,
                       -15.0,
                       -13.0,
                       -15.0,
                       -13.0,
                       -15.0,
                       -105.0,
                       -105.0,
                       -14.0,
                       -17.0,
                       -13.0,
                       -13.0,
                       -106.0,
                       -13.0,
                       -14.0,
                       -15.0,
                       -13.0,
                       -15.0,
                       -16.0,
                       -19.0,
                       -20.0,
                       -15.0,
                       -13.0,
                       -103.0,
                       -13.0,
                       -13.0,
                       -16.0,
                       -13.0,
                       -13.0,
                       -15.0,
                       -106.0,
                       -13.0,
                       -15.0,
                       -13.0,
                       -17.0,
                       -16.0,
                       -15.0,
                       -15.0,
                       -19.0,
                       -106.0,
                       -15.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -111.0,
                       -14.0,
                       -17.0,
                       -14.0,
                       -13.0,
                       -15.0,
                       -13.0,
                       -104.0,
                       -13.0,
                       -13.0,
                       -15.0,
                       -13.0,
                       -100.0,
                       -15.0,
                       -17.0,
                       -107.0,
                       -104.0,
                       -13.0,
                       -107.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -15.0,
                       -15.0,
                       -15.0,
                       -100.0,
                       -17.0,
                       -102.0,
                       -13.0,
                       -13.0,
                       -105.0,
                       -100.0,
                       -111.0,
                       -15.0,
                       -17.0,
                       -15.0,
                       -13.0,
                       -108.0,
                       -17.0,
                       -13.0,
                       -19.0,
                       -13.0,
                       -17.0,
                       -19.0,
                       -17.0,
                       -13.0,
                       -15.0,
                       -105.0,
                       -13.0,
                       -13.0,
                       -15.0,
                       -13.0,
                       -100.0,
                       -16.0,
                       -15.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -15.0,
                       -15.0,
                       -26.0,
                       -15.0,
                       -17.0,
                       -13.0,
                       -13.0,
                       -15.0,
                       -13.0,
                       -13.0,
                       -114.0,
                       -23.0,
                       -17.0,
                       -17.0,
                       -17.0,
                       -15.0]
    np.testing.assert_array_almost_equal(self.stats[1], expected_reward, decimal=2)

  def assert_float_dict_almost_equal(self, a, b, decimal=6):
    for key_pair in zip(sorted(a), sorted(b)):
      self.assertEqual(key_pair[0], key_pair[1])
      np.testing.assert_array_almost_equal(a[key_pair[0]], b[key_pair[1]], decimal=decimal)

if __name__ == '__main__':
  unittest.main()